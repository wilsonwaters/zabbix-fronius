<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.2</version>
    <date>2020-02-09T12:12:27Z</date>
    <groups>
        <group>
            <name>Solar</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Fronius Solar</template>
            <name>Fronius Solar</name>
            <description>Uses Fronius API V1 to query inverter&#13;
Make sure you update the following macros after linking the template&#13;
DEVICE_ID: the device you want to monitor (defaults to 1 if you only have 1 inverter).&#13;
Make sure your host has a hsotname of ip address configured. This must be the address of the Fronius device to monitor</description>
            <groups>
                <group>
                    <name>Solar</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Solar</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Energy Generated Day</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.day_energy</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>Wh</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total energy generated on current day by all inverters on the system</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);

var dayEnergy = null;
if (apiResponse.Body.Data.DAY_ENERGY != undefined) {
   dayEnergy = 0;
   for (var entry in apiResponse.Body.Data.DAY_ENERGY.Values) {
      dayEnergy += apiResponse.Body.Data.DAY_ENERGY.Values[entry];
   }
}
return dayEnergy ;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Energy Consumed Meter Total</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.EnergyReal_WAC_Sum_Consumed</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>Wh</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter energy consumption</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.EnergyReal_WAC_Sum_Consumed</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Energy Consumed Meter Day</name>
                    <type>15</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.energy_consumed_meter_day</key>
                    <delay>30s</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>Wh</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>last(&quot;fronius.EnergyReal_WAC_Sum_Consumed&quot;)-last(&quot;fronius.energy_consumed_meter_startofday&quot;)</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Energy consumption from the grid today</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>Energy Consumed Meter start-of-day</name>
                    <type>15</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.energy_consumed_meter_startofday</key>
                    <delay>0;h0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>Wh</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>last(&quot;fronius.EnergyReal_WAC_Sum_Consumed&quot;)</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Energy consumption from the grid at the start of today</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>Device Error Code</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.ErrorCode</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>error code for inverter {$DEVICE_ID}</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.DeviceStatus.ErrorCode</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_CommonInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Frequency meter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.Frequency_Phase_Average</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>Hz</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter Frequency Phase Average</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.Frequency_Phase_Average</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>InverterRealtimeDataAPI</name>
                    <type>19</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.GetInverterRealtimeData</key>
                    <delay>30s</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>GetInverterRealtimeData API call. Use dependent items to parse this</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>30s</timeout>
                    <url>http://{HOST.CONN}/solar_api/v1/GetInverterRealtimeData.cgi</url>
                    <query_fields>
                        <query_field>
                            <name>Scope</name>
                            <value>System</value>
                        </query_field>
                    </query_fields>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>InverterRealtimeData_3PInverterDataAPI</name>
                    <type>19</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    <delay>30s</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>GetInverterRealtimeData API call. Use dependent items to parse this</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>30s</timeout>
                    <url>http://{HOST.CONN}/solar_api/v1/GetInverterRealtimeData.cgi</url>
                    <query_fields>
                        <query_field>
                            <name>DataCollection</name>
                            <value>3PInverterData</value>
                        </query_field>
                        <query_field>
                            <name>Scope</name>
                            <value>Device</value>
                        </query_field>
                        <query_field>
                            <name>DeviceId</name>
                            <value>{$DEVICE_ID}</value>
                        </query_field>
                    </query_fields>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>InverterRealtimeData_CommonInverterDataAPI</name>
                    <type>19</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.GetInverterRealtimeData_CommonInverterDataAPI</key>
                    <delay>30s</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>GetInverterRealtimeData API call. Use dependent items to parse this</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>30s</timeout>
                    <url>http://{HOST.CONN}/solar_api/v1/GetInverterRealtimeData.cgi</url>
                    <query_fields>
                        <query_field>
                            <name>DataCollection</name>
                            <value>CommonInverterData</value>
                        </query_field>
                        <query_field>
                            <name>Scope</name>
                            <value>Device</value>
                        </query_field>
                        <query_field>
                            <name>DeviceId</name>
                            <value>{$DEVICE_ID}</value>
                        </query_field>
                    </query_fields>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>MeterRealtimeDataAPI</name>
                    <type>19</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.GetMeterRealtimeData</key>
                    <delay>30s</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>GetMeterRealtimeData API call. Use dependent items to parse this.&#13;
These items only work if your system has a smart meter installed</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>30s</timeout>
                    <url>http://{HOST.CONN}/solar_api/v1/GetMeterRealtimeData.cgi</url>
                    <query_fields>
                        <query_field>
                            <name>Scope</name>
                            <value>System</value>
                        </query_field>
                    </query_fields>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>OhmPilotRealtimeDataAPI</name>
                    <type>19</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.GetOhmPilotRealtimeData</key>
                    <delay>30s</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>GetOhmPilotRealtimeData API call. Use dependent items to parse this. Assumes you only have a single OhmPilot at device 0</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>30s</timeout>
                    <url>http://{HOST.CONN}/solar_api/v1/GetOhmPilotRealtimeData.cgi</url>
                    <query_fields>
                        <query_field>
                            <name>Scope</name>
                            <value>Device</value>
                        </query_field>
                        <query_field>
                            <name>DeviceId</name>
                            <value>0</value>
                        </query_field>
                    </query_fields>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>PowerFlowRealtimeDataAPI</name>
                    <type>19</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.GetPowerFlowRealtimeData</key>
                    <delay>30s</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>GetPowerFlowRealtimeData API call. Use dependent items to parse this</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>30s</timeout>
                    <url>http://{HOST.CONN}/solar_api/v1/GetPowerFlowRealtimeData.fcgi</url>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
                <item>
                    <name>DC Current</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.idc</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>A</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>DC current for inverter {$DEVICE_ID}</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.IDC.Value</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_CommonInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Ohmpilot Error Code</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.ohmpilot.CodeOfError</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Error status of OhmPilot at device 0</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.CodeOfError</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetOhmPilotRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Ohmpilot Status Code</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.ohmpilot.CodeOfState</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>status code of OhmPilot at device 0</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.CodeOfState</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetOhmPilotRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Ohmpilot Total Energy Consumed</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.ohmpilot.EnergyReal_WAC_Sum_Consumed</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>Wh</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>total energy consumed by OhmPilot at device 0</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.EnergyReal_WAC_Sum_Consumed</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetOhmPilotRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Ohmpilot Power Consumed</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.ohmpilot.PowerReal_PAC_Sum</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Current power used by OhmPilot at device 0</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.PowerReal_PAC_Sum</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetOhmPilotRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Ohmpilot Sensor Temperature</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.ohmpilot.Temperature_Channel_1</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Temperature of sensor plugged into OhmPilot at device 0</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.Temperature_Channel_1</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetOhmPilotRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Generated</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.pac</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total AC power being generated by all inverters on system</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);

var pac = null;
if (apiResponse.Body.Data.PAC != undefined) {
   pac = 0;
   for (var entry in apiResponse.Body.Data.PAC.Values) {
      pac += apiResponse.Body.Data.PAC.Values[entry];
   }
}
return pac;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Consumed meter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.power_consumed_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter power consumption</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.PowerReal_P_Sum</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Consumed Phase 1</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.power_consumed_p1_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter power consumption</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.PowerReal_P_Phase_1</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Consumed Phase 2</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.power_consumed_p2_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter power consumption</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.PowerReal_P_Phase_2</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Consumed Phase 3</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.power_consumed_p3_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter power consumption</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.PowerReal_P_Phase_3</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Consumed excluding Smartloads</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.power_no_ohmpilot</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);

// powerConsumption is provided as a negative value, whereas ohmPlot consumption is provided as positive.
var powerConsumption = apiResponse.Body.Data.Site.P_Load;

var ohmPilotConsumption = 0;
if (apiResponse.Body.Data.Smartloads != undefined) {
   if (apiResponse.Body.Data.Smartloads.Ohmpilots != undefined) {
      for (var ohmpilotId in apiResponse.Body.Data.Smartloads.Ohmpilots) {
         ohmPilotConsumption += apiResponse.Body.Data.Smartloads.Ohmpilots[ohmpilotId].P_AC_Total;
      }
   }
}

var consumption = (-powerConsumption) - ohmPilotConsumption;

// consumption can be negative sometimes which is silly in this situation. I think this happens
// because the P_Load and P_AC_Total from Fronius aren't measured at exactly the same time (even though it's in the same API call)
// Simply clamp the value to 0w
return Math.max(0, consumption);</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetPowerFlowRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Grid</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.P_Grid</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.Site.P_Grid</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetPowerFlowRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Consumed</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.P_Load</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.Site.P_Load</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                        <step>
                            <type>1</type>
                            <params>-1</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetPowerFlowRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Device Status Code</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.StatusCode</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>status code for inverter {$DEVICE_ID}</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.DeviceStatus.StatusCode</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_CommonInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Energy Generated Total</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.total_energy</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>Wh</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total energy generated on current day by all inverters on the system</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);

var totalEnergy = null;
if (apiResponse.Body.Data.DAY_ENERGY != undefined) {
   totalEnergy = 0;
   for (var entry in apiResponse.Body.Data.TOTAL_ENERGY.Values) {
      totalEnergy += apiResponse.Body.Data.TOTAL_ENERGY.Values[entry];
   }
}
return totalEnergy;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>DC Voltage</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.udc</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>DC Voltage for inverter {$DEVICE_ID}</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.UDC.Value</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_CommonInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Voltage Phase 1 inverter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.vac_p1</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Voltage measured by inverter is only available when inverter is active (i.e. doesn't work at night time).&#13;
Use the equivalent meter readings if you have one</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);
var entry = &quot;UAC_L1&quot;;

// default to null value, which is discarded
var voltage = null; 
if (apiResponse.Body.Data[entry]!= undefined) {
   voltage = apiResponse.Body.Data[entry].Value;
}
return voltage;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Voltage Phase 2 inverter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.vac_p2</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Voltage measured by inverter is only available when inverter is active (i.e. doesn't work at night time).&#13;
Use the equivalent meter readings if you have one</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);
var entry = &quot;UAC_L2&quot;;

// default to null value, which is discarded
var voltage = null; 
if (apiResponse.Body.Data[entry]!= undefined) {
   voltage = apiResponse.Body.Data[entry].Value;
}
return voltage;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Voltage Phase 3 inverter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.vac_p3</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Voltage measured by inverter is only available when inverter is active (i.e. doesn't work at night time).&#13;
Use the equivalent meter readings if you have one</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);
var entry = &quot;UAC_L3&quot;;

// default to null value, which is discarded
var voltage = null; 
if (apiResponse.Body.Data[entry]!= undefined) {
   voltage = apiResponse.Body.Data[entry].Value;
}
return voltage;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Generated Phase 1 inverter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.va_generated_p1_inverter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Voltage and current measurements supplied by inverter are only available when inverter is active (i.e. doesn't work at night time).&#13;
Use the equivalent meter readings if you have one</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);
var phase = &quot;1&quot;;
var voltageEntry = &quot;UAC_L&quot;+phase;
var currentEntry = &quot;IAC_L&quot;+phase;

// default to null value, which is discarded
var va = null; 
if (apiResponse.Body.Data[voltageEntry]!= undefined &amp;&amp; apiResponse.Body.Data[currentEntry]!= undefined) {
   va = apiResponse.Body.Data[voltageEntry ].Value * apiResponse.Body.Data[currentEntry].Value;
}
return va;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Generated Phase 2 inverter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.va_generated_p2_inverter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Voltage and current measurements supplied by inverter are only available when inverter is active (i.e. doesn't work at night time).&#13;
Use the equivalent meter readings if you have one</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);
var phase = &quot;2&quot;;
var voltageEntry = &quot;UAC_L&quot;+phase;
var currentEntry = &quot;IAC_L&quot;+phase;

// default to null value, which is discarded
var va = null; 
if (apiResponse.Body.Data[voltageEntry]!= undefined &amp;&amp; apiResponse.Body.Data[currentEntry]!= undefined) {
   va = apiResponse.Body.Data[voltageEntry ].Value * apiResponse.Body.Data[currentEntry].Value;
}
return va;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Power Generated Phase 3 inverter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.va_generated_p3_inverter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Voltage and current measurements supplied by inverter are only available when inverter is active (i.e. doesn't work at night time).&#13;
Use the equivalent meter readings if you have one</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>21</type>
                            <params>var apiResponse = JSON.parse(value);
var phase = &quot;3&quot;;
var voltageEntry = &quot;UAC_L&quot;+phase;
var currentEntry = &quot;IAC_L&quot;+phase;

// default to null value, which is discarded
var va = null; 
if (apiResponse.Body.Data[voltageEntry]!= undefined &amp;&amp; apiResponse.Body.Data[currentEntry]!= undefined) {
   va = apiResponse.Body.Data[voltageEntry ].Value * apiResponse.Body.Data[currentEntry].Value;
}
return va;</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetInverterRealtimeData_3PInverterDataAPI</key>
                    </master_item>
                </item>
                <item>
                    <name>Voltage Phase 1 meter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.Voltage_AC_Phase_1_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter voltage measurement</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.Voltage_AC_Phase_1</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Voltage Phase 2 meter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.Voltage_AC_Phase_2_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter voltage measurement</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.Voltage_AC_Phase_2</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
                <item>
                    <name>Voltage Phase 3 meter</name>
                    <type>18</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>fronius.Voltage_AC_Phase_3_meter</key>
                    <delay>0</delay>
                    <history>1w</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>V</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Smart meter voltage measurement</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Solar</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>12</type>
                            <params>$.Body.Data.0.Voltage_AC_Phase_3</params>
                            <error_handler>0</error_handler>
                            <error_handler_params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item>
                        <key>fronius.GetMeterRealtimeData</key>
                    </master_item>
                </item>
            </items>
            <discovery_rules/>
            <httptests/>
            <macros>
                <macro>
                    <macro>{$DEVICE_ID}</macro>
                    <value>1</value>
                </macro>
            </macros>
            <templates/>
            <screens/>
            <tags/>
        </template>
    </templates>
    <graphs>
        <graph>
            <name>Solar</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>1</drawtype>
                    <color>C8E6C9</color>
                    <yaxisside>1</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Fronius Solar</host>
                        <key>fronius.day_energy</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>1</drawtype>
                    <color>FFCDD2</color>
                    <yaxisside>1</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Fronius Solar</host>
                        <key>fronius.energy_consumed_meter_day</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>0</drawtype>
                    <color>EF9A9A</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Fronius Solar</host>
                        <key>fronius.P_Load</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>0</drawtype>
                    <color>1A7C11</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Fronius Solar</host>
                        <key>fronius.pac</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <drawtype>0</drawtype>
                    <color>FF4000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Fronius Solar</host>
                        <key>fronius.power_no_ohmpilot</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
